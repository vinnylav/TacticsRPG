[gd_scene load_steps=9 format=3 uid="uid://c53hvlfys0qgf"]

[ext_resource type="Texture2D" uid="uid://dq6x6r7q4oare" path="res://Sprites/Characters/Heros/character_shadow.png" id="2_g70sx"]
[ext_resource type="Texture2D" uid="uid://dbsmyp5fy23fp" path="res://Sprites/Characters/Heros/character_squareYellow.png" id="3_ojgow"]

[sub_resource type="GDScript" id="GDScript_e47vb"]
script/source = "extends CharacterBody2D


const SPEED = 300.0
const JUMP_VELOCITY = -400.0

# Get the gravity from the project settings to be synced with RigidBody nodes.
var gravity = ProjectSettings.get_setting(\"physics/2d/default_gravity\")


func _physics_process(delta):
	# Add the gravity.
	if not is_on_floor():
		velocity.y += gravity * delta

	# Handle Jump.
	if Input.is_action_just_pressed(\"ui_accept\") and is_on_floor():
		velocity.y = JUMP_VELOCITY

	# Get the input direction and handle the movement/deceleration.
	# As good practice, you should replace UI actions with custom gameplay actions.
	var direction = Input.get_axis(\"ui_left\", \"ui_right\")
	if direction:
		velocity.x = direction * SPEED
	else:
		velocity.x = move_toward(velocity.x, 0, SPEED)

	move_and_slide()
"

[sub_resource type="Animation" id="Animation_lfq2w"]
resource_name = "idle"
length = 0.001
tracks/0/type = "value"
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/path = NodePath(".:modulate")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/keys = {
"times": PackedFloat32Array(),
"transitions": PackedFloat32Array(),
"update": 0,
"values": []
}

[sub_resource type="Animation" id="Animation_4vyw6"]
resource_name = "reset"

[sub_resource type="Animation" id="Animation_q88ve"]
resource_name = "selected"
length = 1.4
loop_mode = 1
tracks/0/type = "value"
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/path = NodePath(".:modulate")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/keys = {
"times": PackedFloat32Array(0, 1),
"transitions": PackedFloat32Array(1, 1),
"update": 0,
"values": [Color(1, 1, 1, 1), Color(0.8, 0.8, 0.8, 1)]
}

[sub_resource type="Animation" id="Animation_b5f5t"]
length = 0.001
tracks/0/type = "value"
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/path = NodePath(".:modulate")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 0,
"values": [Color(1, 1, 1, 1)]
}

[sub_resource type="AnimationLibrary" id="AnimationLibrary_uei6k"]
_data = {
"RESET": SubResource("Animation_b5f5t"),
"idle": SubResource("Animation_lfq2w"),
"reset": SubResource("Animation_4vyw6"),
"selected": SubResource("Animation_q88ve")
}

[node name="CharacterBody3D" type="CharacterBody2D"]
script = SubResource("GDScript_e47vb")

[node name="Shadow" type="Sprite2D" parent="."]
texture = ExtResource("2_g70sx")

[node name="Unit" type="Sprite2D" parent="."]
texture = ExtResource("3_ojgow")

[node name="AnimationPlayer" type="AnimationPlayer" parent="Unit"]
libraries = {
"": SubResource("AnimationLibrary_uei6k")
}
